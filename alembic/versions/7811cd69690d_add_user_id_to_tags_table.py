"""Add user_id to tags table

Revision ID: 7811cd69690d
Revises: 539e99dce524
Create Date: 2025-10-15 20:57:04.839856

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7811cd69690d'
down_revision: Union[str, None] = '539e99dce524'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Delete all existing tags since we don't know which user they belong to
    op.execute('DELETE FROM tags')

    # Use batch mode for SQLite
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('uq_tag_name', type_='unique')
        batch_op.drop_index('ix_tags_name')
        batch_op.create_index(batch_op.f('ix_tags_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_tags_user_id'), ['user_id'], unique=False)
        batch_op.create_unique_constraint('uq_tag_user_name', ['user_id', 'name'])
        batch_op.create_foreign_key('fk_tags_user_id', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Use batch mode for SQLite
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tags_user_id', type_='foreignkey')
        batch_op.drop_constraint('uq_tag_user_name', type_='unique')
        batch_op.drop_index(batch_op.f('ix_tags_user_id'))
        batch_op.drop_index(batch_op.f('ix_tags_name'))
        batch_op.create_index('ix_tags_name', ['name'], unique=1)
        batch_op.create_unique_constraint('uq_tag_name', ['name'])
        batch_op.drop_column('user_id')
    # ### end Alembic commands ###
