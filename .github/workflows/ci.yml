name: CI – Backend + Frontend + Smoke test

on:
  push:
    branches: [main, staging]
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        default: "staging"
        type: choice
        options:
          - "staging"
          - "production"
      deploy:
        description: "Deploy after build?"
        required: true
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

jobs:
  ci:
    runs-on: self-hosted

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v3

      # ─────── Backend Setup ───────

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install backend dependencies
        run: pip install -r requirements.txt

      - name: 🚀 Start FastAPI backend
        run: |
          uvicorn api.main_api:app --reload --host 0.0.0.0 --port 8000 &
          sleep 2

      # ─────── Frontend Setup ───────

      - name: 🟦 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: 🛠 Build frontend
        working-directory: frontend
        run: npm run build

      - name: 🚀 Start frontend preview server
        working-directory: frontend
        run: |
          npm run preview -- --port 3000 &
          sleep 5

      # ─────── Smoke Tests ───────

      - name: 🧪 Smoke test backend
        run: curl -f http://localhost:8000/docs || exit 1

      - name: 🧪 Smoke test frontend
        run: curl -f http://localhost:3000 || exit 1


      - name: 🧪 Backend test
        run: |
          pytest tests


      - name: 🚀 Deploy to production
        if: github.ref == 'refs/heads/main' && env.DEPLOY == 'true'
        run: |
          echo "Creating persistent deploy dir..."
          mkdir -p /opt/slayflashcards
          mkdir -p /opt/slayflashcards/frontend

          echo "Copying frontend build..."
          rsync -av --delete frontend/dist/ /opt/slayflashcards/frontend/

          echo "Copying backend..."
          rsync -av --delete api/ /opt/slayflashcards/api/
          rsync -av --delete requirements.txt /opt/slayflashcards/

          echo "Restarting backend service..."
          sudo systemctl restart slayflashcards-backend

          echo "✅ Deployment complete!"