name: CI – Backend + Frontend + Smoke test

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        default: "staging"
        type: choice
        options:
          - "staging"
          - "production"
      deploy:
        description: "Deploy after build?"
        required: true
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

jobs:
  ci:
    runs-on: self-hosted

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      # ─────── Backend ───────
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 📦 Install backend dependencies
        run: pip install -r requirements.txt

      - name: 🚀 Start FastAPI backend
        run: |
          uvicorn api.main_api:app --host 0.0.0.0 --port 8000 &
          sleep 2

      # ─────── Frontend ───────
      - name: 🟦 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: 📦 Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: 🛠 Build frontend
        working-directory: frontend
        run: npm run build

      - name: 🚀 Start frontend preview server
        working-directory: frontend
        run: |
          npm run preview -- --port 3000 &
          sleep 5

      # ─────── Smoke tests ───────
      - name: 🧪 Smoke test backend
        run: curl -f http://localhost:8000/docs || exit 1

      - name: 🧪 Smoke test frontend
        run: curl -f http://localhost:3000 || exit 1

      - name: Backend Tests
        run: |
          pytest tests

      - name: Frontend Tests
        working-directory: frontend
        run: |
          npm run test 

      # ─────── Conditional Deploy ───────
      - name: 🚀 Deploy to target environment
        if: ${{ github.event.inputs.deploy == 'true' }}
        run: |
          echo "Deploying to ${{ github.event.inputs.environment }}..."
          mkdir -p /opt/slayflashcards
          rsync -av --delete frontend/dist/ /opt/slayflashcards/frontend/
          rsync -av --delete api/ /opt/slayflashcards/api/
          rsync -av --delete requirements.txt /opt/slayflashcards/
          sudo systemctl restart slayflashcards-backend
          echo "✅ Deployment complete."