openapi: 3.1.0
info:
  title: SlayFlashcards API
  description: REST API for SlayFlashcards - An interactive flashcard learning platform
  version: 1.0.0
paths:
  /health:
    get:
      tags:
      - health
      summary: Health Check
      description: Health check endpoint.
      operationId: health_check_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/auth/login:
    post:
      tags:
      - authentication
      summary: Login
      description: Authenticate user and return access token. Accepts username or
        email.
      operationId: login_api_v1_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/register:
    post:
      tags:
      - authentication
      summary: Register
      description: Register new user and return access token.
      operationId: register_api_v1_auth_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/me:
    get:
      tags:
      - authentication
      summary: Get Current User Info
      description: Get current user information.
      operationId: get_current_user_info_api_v1_auth_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      security:
      - HTTPBearer: []
  /api/v1/auth/refresh:
    post:
      tags:
      - authentication
      summary: Refresh Token
      description: Refresh access token.
      operationId: refresh_token_api_v1_auth_refresh_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
      security:
      - HTTPBearer: []
  /api/v1/auth/logout:
    post:
      tags:
      - authentication
      summary: Logout
      description: Logout user (client-side token removal).
      operationId: logout_api_v1_auth_logout_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/auth/verify:
    get:
      tags:
      - authentication
      summary: Verify Authentication
      description: Verify if the current token is valid.
      operationId: verify_authentication_api_v1_auth_verify_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - HTTPBearer: []
  /api/v1/users/:
    get:
      tags:
      - users
      summary: Get Users
      description: Get all users with optional filtering and pagination.
      operationId: get_users_api_v1_users__get
      security:
      - HTTPBearer: []
      parameters:
      - name: name_contains
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter users by name pattern
          title: Name Contains
        description: Filter users by name pattern
      - name: has_sessions
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Filter users who have sessions
          title: Has Sessions
        description: Filter users who have sessions
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
          title: Page
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 20
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - users
      summary: Create User
      description: Create a new user.
      operationId: create_user_api_v1_users__post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/{user_id}:
    get:
      tags:
      - users
      summary: Get User
      description: Get a specific user by ID.
      operationId: get_user_api_v1_users__user_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - users
      summary: Update User
      description: Update an existing user.
      operationId: update_user_api_v1_users__user_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - users
      summary: Delete User
      description: Delete a user and optionally their sessions.
      operationId: delete_user_api_v1_users__user_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      - name: delete_sessions
        in: query
        required: false
        schema:
          type: boolean
          description: Also delete all user sessions
          default: false
          title: Delete Sessions
        description: Also delete all user sessions
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/name/{username}:
    get:
      tags:
      - users
      summary: Get User By Name
      description: Get a user by username.
      operationId: get_user_by_name_api_v1_users_name__username__get
      security:
      - HTTPBearer: []
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
          title: Username
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/{user_id}/statistics:
    get:
      tags:
      - users
      summary: Get User Statistics
      description: Get comprehensive statistics for a user.
      operationId: get_user_statistics_api_v1_users__user_id__statistics_get
      security:
      - HTTPBearer: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStatsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/ensure:
    post:
      tags:
      - users
      summary: Ensure User Exists
      description: Get user if exists, create if not.
      operationId: ensure_user_exists_api_v1_users_ensure_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/users/{user_id}/progress:
    get:
      tags:
      - users
      summary: Get User Progress
      description: Get user learning progress over time.
      operationId: get_user_progress_api_v1_users__user_id__progress_get
      security:
      - HTTPBearer: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      - name: quiz_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Filter by specific quiz
          title: Quiz Id
        description: Filter by specific quiz
      - name: days
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            maximum: 365
            minimum: 1
          - type: 'null'
          description: Number of days to analyze
          default: 30
          title: Days
        description: Number of days to analyze
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get User Progress Api V1 Users  User Id  Progress
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/leaderboard:
    get:
      tags:
      - users
      summary: Get User Leaderboard
      description: Get user leaderboard based on performance.
      operationId: get_user_leaderboard_api_v1_users_leaderboard_get
      security:
      - HTTPBearer: []
      parameters:
      - name: quiz_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Filter by specific quiz
          title: Quiz Id
        description: Filter by specific quiz
      - name: mode
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by session mode
          default: test
          title: Mode
        description: Filter by session mode
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Number of top users
          default: 10
          title: Limit
        description: Number of top users
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get User Leaderboard Api V1 Users Leaderboard Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/search:
    get:
      tags:
      - users
      summary: Search Users
      description: Search users by name.
      operationId: search_users_api_v1_users_search_get
      security:
      - HTTPBearer: []
      parameters:
      - name: q
        in: query
        required: true
        schema:
          type: string
          minLength: 1
          description: Search query
          title: Q
        description: Search query
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Maximum results
          default: 20
          title: Limit
        description: Maximum results
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/quizzes/:
    get:
      tags:
      - quizzes
      summary: Get Quizzes
      description: Get all quizzes with optional filtering and pagination.
      operationId: get_quizzes_api_v1_quizzes__get
      security:
      - HTTPBearer: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
          title: Page
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 20
          title: Limit
      - name: subject
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Subject
      - name: category
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Category
      - name: level
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Level
      - name: name_contains
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Name Contains
      - name: difficulty_min
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            maximum: 5
            minimum: 1
          - type: 'null'
          title: Difficulty Min
      - name: difficulty_max
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            maximum: 5
            minimum: 1
          - type: 'null'
          title: Difficulty Max
      - name: created_after
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Created After
      - name: created_before
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Created Before
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizzesResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - quizzes
      summary: Create Quiz
      description: Create a new quiz.
      operationId: create_quiz_api_v1_quizzes__post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/quizzes/{quiz_id}:
    get:
      tags:
      - quizzes
      summary: Get Quiz
      description: Get a specific quiz by ID.
      operationId: get_quiz_api_v1_quizzes__quiz_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: quiz_id
        in: path
        required: true
        schema:
          type: integer
          title: Quiz Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - quizzes
      summary: Update Quiz
      description: Update an existing quiz.
      operationId: update_quiz_api_v1_quizzes__quiz_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: quiz_id
        in: path
        required: true
        schema:
          type: integer
          title: Quiz Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - quizzes
      summary: Delete Quiz
      description: Delete a quiz and all its flashcards.
      operationId: delete_quiz_api_v1_quizzes__quiz_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: quiz_id
        in: path
        required: true
        schema:
          type: integer
          title: Quiz Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/quizzes/{quiz_id}/statistics:
    get:
      tags:
      - quizzes
      summary: Get Quiz Statistics
      description: Get detailed statistics for a quiz.
      operationId: get_quiz_statistics_api_v1_quizzes__quiz_id__statistics_get
      security:
      - HTTPBearer: []
      parameters:
      - name: quiz_id
        in: path
        required: true
        schema:
          type: integer
          title: Quiz Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizStatsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/quizzes/import:
    post:
      tags:
      - quizzes
      summary: Import Quiz
      description: Import a quiz from JSON data.
      operationId: import_quiz_api_v1_quizzes_import_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizImportData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/quizzes/import-file:
    post:
      tags:
      - quizzes
      summary: Import Quiz File
      description: Import a quiz from uploaded JSON file.
      operationId: import_quiz_file_api_v1_quizzes_import_file_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_quiz_file_api_v1_quizzes_import_file_post'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/quizzes/{quiz_id}/export:
    get:
      tags:
      - quizzes
      summary: Export Quiz
      description: Export a quiz as JSON data.
      operationId: export_quiz_api_v1_quizzes__quiz_id__export_get
      security:
      - HTTPBearer: []
      parameters:
      - name: quiz_id
        in: path
        required: true
        schema:
          type: integer
          title: Quiz Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/quizzes/{quiz_id}/duplicate:
    post:
      tags:
      - quizzes
      summary: Duplicate Quiz
      description: Duplicate an existing quiz with all its flashcards.
      operationId: duplicate_quiz_api_v1_quizzes__quiz_id__duplicate_post
      security:
      - HTTPBearer: []
      parameters:
      - name: quiz_id
        in: path
        required: true
        schema:
          type: integer
          title: Quiz Id
      - name: new_name
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: New name for duplicated quiz
          title: New Name
        description: New name for duplicated quiz
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/quizzes/search:
    get:
      tags:
      - quizzes
      summary: Search Quizzes
      description: Search quizzes by name, subject, or description.
      operationId: search_quizzes_api_v1_quizzes_search_get
      security:
      - HTTPBearer: []
      parameters:
      - name: q
        in: query
        required: true
        schema:
          type: string
          minLength: 1
          description: Search query
          title: Q
        description: Search query
      - name: subject
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by subject
          title: Subject
        description: Filter by subject
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Maximum results
          default: 20
          title: Limit
        description: Maximum results
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizzesResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/quizzes/subjects:
    get:
      tags:
      - quizzes
      summary: Get Subjects
      description: Get all unique subjects with quiz counts.
      operationId: get_subjects_api_v1_quizzes_subjects_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Get Subjects Api V1 Quizzes Subjects Get
      security:
      - HTTPBearer: []
  /api/v1/flashcards/:
    get:
      tags:
      - flashcards
      summary: Get Flashcards
      description: Get flashcards with optional filtering and pagination.
      operationId: get_flashcards_api_v1_flashcards__get
      security:
      - HTTPBearer: []
      parameters:
      - name: quiz_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Filter by quiz ID
          title: Quiz Id
        description: Filter by quiz ID
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
          title: Page
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 20
          title: Limit
      - name: difficulty
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            maximum: 5
            minimum: 1
          - type: 'null'
          title: Difficulty
      - name: question_lang
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Question Lang
      - name: answer_lang
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Answer Lang
      - name: answer_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/AnswerType'
          - type: 'null'
          title: Answer Type
      - name: search_text
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search Text
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashcardsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - flashcards
      summary: Create Flashcard
      description: Create a new flashcard.
      operationId: create_flashcard_api_v1_flashcards__post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlashcardCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashcardResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/flashcards/{flashcard_id}:
    get:
      tags:
      - flashcards
      summary: Get Flashcard
      description: Get a specific flashcard by ID.
      operationId: get_flashcard_api_v1_flashcards__flashcard_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: flashcard_id
        in: path
        required: true
        schema:
          type: integer
          title: Flashcard Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashcardResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - flashcards
      summary: Update Flashcard
      description: Update an existing flashcard.
      operationId: update_flashcard_api_v1_flashcards__flashcard_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: flashcard_id
        in: path
        required: true
        schema:
          type: integer
          title: Flashcard Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlashcardUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashcardResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - flashcards
      summary: Delete Flashcard
      description: Delete a flashcard.
      operationId: delete_flashcard_api_v1_flashcards__flashcard_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: flashcard_id
        in: path
        required: true
        schema:
          type: integer
          title: Flashcard Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/flashcards/bulk:
    post:
      tags:
      - flashcards
      summary: Bulk Create Flashcards
      description: Create multiple flashcards at once.
      operationId: bulk_create_flashcards_api_v1_flashcards_bulk_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkFlashcardCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/flashcards/quiz/{quiz_id}/random:
    get:
      tags:
      - flashcards
      summary: Get Random Flashcards
      description: Get random flashcards from a quiz.
      operationId: get_random_flashcards_api_v1_flashcards_quiz__quiz_id__random_get
      security:
      - HTTPBearer: []
      parameters:
      - name: quiz_id
        in: path
        required: true
        schema:
          type: integer
          title: Quiz Id
      - name: count
        in: query
        required: false
        schema:
          type: integer
          maximum: 50
          minimum: 1
          description: Number of random flashcards
          default: 5
          title: Count
        description: Number of random flashcards
      - name: difficulty
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            maximum: 5
            minimum: 1
          - type: 'null'
          description: Filter by difficulty
          title: Difficulty
        description: Filter by difficulty
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashcardsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/flashcards/quiz/{quiz_id}/types:
    get:
      tags:
      - flashcards
      summary: Get Flashcard Answer Types
      description: Get answer type statistics for flashcards in a quiz.
      operationId: get_flashcard_answer_types_api_v1_flashcards_quiz__quiz_id__types_get
      security:
      - HTTPBearer: []
      parameters:
      - name: quiz_id
        in: path
        required: true
        schema:
          type: integer
          title: Quiz Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get Flashcard Answer Types Api V1 Flashcards Quiz  Quiz
                  Id  Types Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sessions/:
    get:
      tags:
      - sessions
      summary: Get Sessions
      description: Get sessions with optional filtering and pagination.
      operationId: get_sessions_api_v1_sessions__get
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
          title: Page
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 20
          title: Limit
      - name: user_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: User Id
      - name: quiz_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Quiz Id
      - name: mode
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/SessionMode'
          - type: 'null'
          title: Mode
      - name: score_min
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            maximum: 100
            minimum: 0
          - type: 'null'
          title: Score Min
      - name: score_max
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            maximum: 100
            minimum: 0
          - type: 'null'
          title: Score Max
      - name: started_after
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Started After
      - name: started_before
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Started Before
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - sessions
      summary: Create Session
      description: Create a new learning or test session.
      operationId: create_session_api_v1_sessions__post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sessions/statistics:
    get:
      tags:
      - sessions
      summary: Get Session Statistics
      description: Get session statistics.
      operationId: get_session_statistics_api_v1_sessions_statistics_get
      parameters:
      - name: user_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Filter by user ID
          title: User Id
        description: Filter by user ID
      - name: quiz_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Filter by quiz ID
          title: Quiz Id
        description: Filter by quiz ID
      - name: days
        in: query
        required: false
        schema:
          type: integer
          maximum: 365
          minimum: 1
          description: Number of days to analyze
          default: 30
          title: Days
        description: Number of days to analyze
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionStatsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sessions/{session_id}:
    get:
      tags:
      - sessions
      summary: Get Session
      description: Get a specific session by ID.
      operationId: get_session_api_v1_sessions__session_id__get
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: integer
          title: Session Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - sessions
      summary: Update Session
      description: Update an existing session.
      operationId: update_session_api_v1_sessions__session_id__put
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: integer
          title: Session Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - sessions
      summary: Delete Session
      description: Delete a session.
      operationId: delete_session_api_v1_sessions__session_id__delete
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: integer
          title: Session Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sessions/test/submit:
    post:
      tags:
      - sessions
      summary: Submit Test
      description: Submit test answers and get results.
      operationId: submit_test_api_v1_sessions_test_submit_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSubmission'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResultsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sessions/learning/{session_id}/progress:
    put:
      tags:
      - sessions
      summary: Update Learning Progress
      description: Update progress for a learning session.
      operationId: update_learning_progress_api_v1_sessions_learning__session_id__progress_put
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: integer
          title: Session Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LearningSessionUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sessions/user/{user_id}/recent:
    get:
      tags:
      - sessions
      summary: Get User Recent Sessions
      description: Get recent sessions for a user.
      operationId: get_user_recent_sessions_api_v1_sessions_user__user_id__recent_get
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 50
          minimum: 1
          description: Number of recent sessions
          default: 10
          title: Limit
        description: Number of recent sessions
      - name: mode
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/SessionMode'
          - type: 'null'
          description: Filter by session mode
          title: Mode
        description: Filter by session mode
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sessions/quiz/{quiz_id}/performance:
    get:
      tags:
      - sessions
      summary: Get Quiz Performance Stats
      description: Get performance statistics for a specific quiz.
      operationId: get_quiz_performance_stats_api_v1_sessions_quiz__quiz_id__performance_get
      parameters:
      - name: quiz_id
        in: path
        required: true
        schema:
          type: integer
          title: Quiz Id
      - name: days
        in: query
        required: false
        schema:
          type: integer
          maximum: 365
          minimum: 1
          description: Number of days to analyze
          default: 30
          title: Days
        description: Number of days to analyze
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get Quiz Performance Stats Api V1 Sessions Quiz  Quiz
                  Id  Performance Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AnswerEvaluation:
      type: string
      enum:
      - correct
      - incorrect
      - partial
      title: AnswerEvaluation
    AnswerType:
      type: string
      enum:
      - text
      - integer
      - float
      - range
      - boolean
      - choice
      - multiple_choice
      - short_text
      title: AnswerType
    AuthResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          $ref: '#/components/schemas/Token'
      type: object
      required:
      - data
      title: AuthResponse
      description: Authentication response.
    Body_import_quiz_file_api_v1_quizzes_import_file_post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
      - file
      title: Body_import_quiz_file_api_v1_quizzes_import_file_post
    BulkFlashcardCreate:
      properties:
        quiz_id:
          type: integer
          title: Quiz Id
        flashcards:
          items:
            additionalProperties: true
            type: object
          type: array
          maxItems: 100
          minItems: 1
          title: Flashcards
      type: object
      required:
      - quiz_id
      - flashcards
      title: BulkFlashcardCreate
      description: Bulk flashcard creation schema.
    BulkOperationResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          $ref: '#/components/schemas/BulkOperationResult'
      type: object
      required:
      - data
      title: BulkOperationResponse
      description: Bulk operation response.
    BulkOperationResult:
      properties:
        total:
          type: integer
          title: Total
        successful:
          type: integer
          title: Successful
        failed:
          type: integer
          title: Failed
        errors:
          items:
            type: string
          type: array
          title: Errors
          default: []
      type: object
      required:
      - total
      - successful
      - failed
      title: BulkOperationResult
      description: Bulk operation result schema.
    CardResult:
      properties:
        flashcard_id:
          type: integer
          title: Flashcard Id
        question:
          type: string
          title: Question
        user_answer:
          type: string
          title: User Answer
        correct_answer:
          type: string
          title: Correct Answer
        evaluation:
          $ref: '#/components/schemas/AnswerEvaluation'
        score:
          type: number
          title: Score
        time_taken:
          anyOf:
          - type: number
          - type: 'null'
          title: Time Taken
      type: object
      required:
      - flashcard_id
      - question
      - user_answer
      - correct_answer
      - evaluation
      - score
      title: CardResult
      description: Card result schema.
    Flashcard:
      properties:
        id:
          type: integer
          title: Id
        quiz_id:
          type: integer
          title: Quiz Id
        question_title:
          type: string
          title: Question Title
        question_text:
          type: string
          title: Question Text
        question_lang:
          anyOf:
          - type: string
          - type: 'null'
          title: Question Lang
        question_difficulty:
          anyOf:
          - type: integer
          - type: 'null'
          title: Question Difficulty
        question_emoji:
          anyOf:
          - type: string
          - type: 'null'
          title: Question Emoji
        question_image:
          anyOf:
          - type: string
          - type: 'null'
          title: Question Image
        answer_text:
          type: string
          title: Answer Text
        answer_lang:
          anyOf:
          - type: string
          - type: 'null'
          title: Answer Lang
        answer_type:
          type: string
          title: Answer Type
        answer_options:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Answer Options
        answer_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Answer Metadata
      type: object
      required:
      - id
      - quiz_id
      - question_title
      - question_text
      - question_lang
      - question_difficulty
      - question_emoji
      - question_image
      - answer_text
      - answer_lang
      - answer_type
      - answer_options
      - answer_metadata
      title: Flashcard
      description: Flashcard response schema.
    FlashcardAnswerBase:
      properties:
        text:
          type: string
          maxLength: 2000
          minLength: 1
          title: Text
        lang:
          anyOf:
          - type: string
            maxLength: 10
          - type: 'null'
          title: Lang
        type:
          $ref: '#/components/schemas/AnswerType'
          default: text
        options:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Options
        metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Metadata
      type: object
      required:
      - text
      title: FlashcardAnswerBase
      description: Base flashcard answer schema.
    FlashcardCreate:
      properties:
        quiz_id:
          type: integer
          title: Quiz Id
        question:
          $ref: '#/components/schemas/FlashcardQuestionBase'
        answer:
          $ref: '#/components/schemas/FlashcardAnswerBase'
      type: object
      required:
      - quiz_id
      - question
      - answer
      title: FlashcardCreate
      description: Flashcard creation schema.
    FlashcardQuestionBase:
      properties:
        title:
          type: string
          maxLength: 500
          minLength: 1
          title: Title
        text:
          type: string
          maxLength: 2000
          minLength: 1
          title: Text
        lang:
          anyOf:
          - type: string
            maxLength: 10
          - type: 'null'
          title: Lang
        difficulty:
          anyOf:
          - type: integer
            maximum: 5.0
            minimum: 1.0
          - type: 'null'
          title: Difficulty
        emoji:
          anyOf:
          - type: string
            maxLength: 10
          - type: 'null'
          title: Emoji
        image:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Image
      type: object
      required:
      - title
      - text
      title: FlashcardQuestionBase
      description: Base flashcard question schema.
    FlashcardResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          $ref: '#/components/schemas/Flashcard'
      type: object
      required:
      - data
      title: FlashcardResponse
      description: Flashcard response with data.
    FlashcardUpdate:
      properties:
        question:
          anyOf:
          - $ref: '#/components/schemas/FlashcardQuestionBase'
          - type: 'null'
        answer:
          anyOf:
          - $ref: '#/components/schemas/FlashcardAnswerBase'
          - type: 'null'
      type: object
      title: FlashcardUpdate
      description: Flashcard update schema.
    FlashcardsResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          items:
            $ref: '#/components/schemas/Flashcard'
          type: array
          title: Data
      type: object
      required:
      - data
      title: FlashcardsResponse
      description: Multiple flashcards response.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    LearningProgress:
      properties:
        flashcard_id:
          type: integer
          title: Flashcard Id
        reviewed:
          type: boolean
          title: Reviewed
        confidence:
          anyOf:
          - type: integer
            maximum: 5.0
            minimum: 1.0
          - type: 'null'
          title: Confidence
        time_spent:
          anyOf:
          - type: number
          - type: 'null'
          title: Time Spent
      type: object
      required:
      - flashcard_id
      - reviewed
      title: LearningProgress
      description: Learning progress schema.
    LearningSessionUpdate:
      properties:
        progress:
          items:
            $ref: '#/components/schemas/LearningProgress'
          type: array
          title: Progress
      type: object
      required:
      - progress
      title: LearningSessionUpdate
      description: Learning session update schema.
    LoginRequest:
      properties:
        username:
          type: string
          minLength: 1
          title: Username
        password:
          type: string
          minLength: 1
          title: Password
      type: object
      required:
      - username
      - password
      title: LoginRequest
      description: Login request schema.
    Quiz:
      properties:
        name:
          type: string
          maxLength: 200
          minLength: 1
          title: Name
          description: Quiz name
        subject:
          anyOf:
          - type: string
            maxLength: 100
          - type: 'null'
          title: Subject
          description: Quiz subject
        category:
          anyOf:
          - type: string
            maxLength: 100
          - type: 'null'
          title: Category
          description: Category within subject (e.g., Poland)
        level:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Level
          description: Level of advancement (e.g., Beginner, Class 5)
        description:
          anyOf:
          - type: string
            maxLength: 1000
          - type: 'null'
          title: Description
          description: Quiz description
        id:
          type: integer
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        flashcard_count:
          anyOf:
          - type: integer
          - type: 'null'
          title: Flashcard Count
      type: object
      required:
      - name
      - id
      - created_at
      title: Quiz
      description: Quiz response schema.
    QuizCreate:
      properties:
        name:
          type: string
          maxLength: 200
          minLength: 1
          title: Name
          description: Quiz name
        subject:
          anyOf:
          - type: string
            maxLength: 100
          - type: 'null'
          title: Subject
          description: Quiz subject
        category:
          anyOf:
          - type: string
            maxLength: 100
          - type: 'null'
          title: Category
          description: Category within subject (e.g., Poland)
        level:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Level
          description: Level of advancement (e.g., Beginner, Class 5)
        description:
          anyOf:
          - type: string
            maxLength: 1000
          - type: 'null'
          title: Description
          description: Quiz description
      type: object
      required:
      - name
      title: QuizCreate
      description: Quiz creation schema.
    QuizImportData:
      properties:
        quiz:
          additionalProperties: true
          type: object
          title: Quiz
          description: Quiz metadata
        flashcards:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Flashcards
          description: Flashcard data
      type: object
      required:
      - quiz
      - flashcards
      title: QuizImportData
      description: Quiz import data schema.
    QuizResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          $ref: '#/components/schemas/Quiz'
      type: object
      required:
      - data
      title: QuizResponse
      description: Quiz response with data.
    QuizStats:
      properties:
        total_cards:
          type: integer
          title: Total Cards
        difficulty_distribution:
          additionalProperties:
            type: integer
          type: object
          title: Difficulty Distribution
        question_languages:
          additionalProperties:
            type: integer
          type: object
          title: Question Languages
        answer_languages:
          additionalProperties:
            type: integer
          type: object
          title: Answer Languages
        answer_types:
          additionalProperties:
            type: integer
          type: object
          title: Answer Types
        subject:
          anyOf:
          - type: string
          - type: 'null'
          title: Subject
        created_at:
          type: string
          format: date-time
          title: Created At
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
      type: object
      required:
      - total_cards
      - difficulty_distribution
      - question_languages
      - answer_languages
      - answer_types
      - subject
      - created_at
      - description
      title: QuizStats
      description: Quiz statistics schema.
    QuizStatsResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          $ref: '#/components/schemas/QuizStats'
      type: object
      required:
      - data
      title: QuizStatsResponse
      description: Quiz statistics response.
    QuizUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 200
            minLength: 1
          - type: 'null'
          title: Name
        subject:
          anyOf:
          - type: string
            maxLength: 100
          - type: 'null'
          title: Subject
        category:
          anyOf:
          - type: string
            maxLength: 100
          - type: 'null'
          title: Category
        level:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Level
        description:
          anyOf:
          - type: string
            maxLength: 1000
          - type: 'null'
          title: Description
      type: object
      title: QuizUpdate
      description: Quiz update schema.
    QuizzesResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          items:
            $ref: '#/components/schemas/Quiz'
          type: array
          title: Data
      type: object
      required:
      - data
      title: QuizzesResponse
      description: Multiple quizzes response.
    RegisterRequest:
      properties:
        username:
          type: string
          maxLength: 50
          minLength: 3
          title: Username
        password:
          type: string
          maxLength: 128
          minLength: 8
          title: Password
        email:
          type: string
          title: Email
      type: object
      required:
      - username
      - password
      - email
      title: RegisterRequest
      description: Registration request schema.
    Session:
      properties:
        user_id:
          type: integer
          title: User Id
        quiz_id:
          type: integer
          title: Quiz Id
        mode:
          $ref: '#/components/schemas/SessionMode'
        id:
          type: integer
          title: Id
        started_at:
          type: string
          format: date-time
          title: Started At
        score:
          anyOf:
          - type: integer
          - type: 'null'
          title: Score
        completed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Completed At
      type: object
      required:
      - user_id
      - quiz_id
      - mode
      - id
      - started_at
      - score
      title: Session
      description: Session response schema.
    SessionCreate:
      properties:
        user_id:
          type: integer
          title: User Id
        quiz_id:
          type: integer
          title: Quiz Id
        mode:
          $ref: '#/components/schemas/SessionMode'
        score:
          anyOf:
          - type: integer
            maximum: 100.0
            minimum: 0.0
          - type: 'null'
          title: Score
      type: object
      required:
      - user_id
      - quiz_id
      - mode
      title: SessionCreate
      description: Session creation schema.
    SessionMode:
      type: string
      enum:
      - learn
      - test
      title: SessionMode
    SessionResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          $ref: '#/components/schemas/Session'
      type: object
      required:
      - data
      title: SessionResponse
      description: Session response with data.
    SessionStats:
      properties:
        total_sessions:
          type: integer
          title: Total Sessions
        learn_sessions:
          type: integer
          title: Learn Sessions
        test_sessions:
          type: integer
          title: Test Sessions
        average_score:
          anyOf:
          - type: number
          - type: 'null'
          title: Average Score
        best_score:
          anyOf:
          - type: integer
          - type: 'null'
          title: Best Score
        unique_quizzes:
          type: integer
          title: Unique Quizzes
        sessions_this_week:
          type: integer
          title: Sessions This Week
        sessions_this_month:
          type: integer
          title: Sessions This Month
      type: object
      required:
      - total_sessions
      - learn_sessions
      - test_sessions
      - average_score
      - best_score
      - unique_quizzes
      - sessions_this_week
      - sessions_this_month
      title: SessionStats
      description: Session statistics schema.
    SessionStatsResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          $ref: '#/components/schemas/SessionStats'
      type: object
      required:
      - data
      title: SessionStatsResponse
      description: Session statistics response.
    SessionUpdate:
      properties:
        score:
          anyOf:
          - type: integer
            maximum: 100.0
            minimum: 0.0
          - type: 'null'
          title: Score
        completed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Completed At
      type: object
      title: SessionUpdate
      description: Session update schema.
    SessionsResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          items:
            $ref: '#/components/schemas/Session'
          type: array
          title: Data
      type: object
      required:
      - data
      title: SessionsResponse
      description: Multiple sessions response.
    TestAnswer:
      properties:
        flashcard_id:
          type: integer
          title: Flashcard Id
        user_answer:
          type: string
          title: User Answer
        time_taken:
          anyOf:
          - type: number
          - type: 'null'
          title: Time Taken
      type: object
      required:
      - flashcard_id
      - user_answer
      title: TestAnswer
      description: Test answer schema.
    TestResults:
      properties:
        session_id:
          type: integer
          title: Session Id
        total_questions:
          type: integer
          title: Total Questions
        correct:
          type: integer
          title: Correct
        partial:
          type: integer
          title: Partial
        incorrect:
          type: integer
          title: Incorrect
        final_score:
          type: integer
          title: Final Score
        time_taken:
          anyOf:
          - type: number
          - type: 'null'
          title: Time Taken
        breakdown:
          items:
            $ref: '#/components/schemas/CardResult'
          type: array
          title: Breakdown
      type: object
      required:
      - session_id
      - total_questions
      - correct
      - partial
      - incorrect
      - final_score
      - breakdown
      title: TestResults
      description: Test results schema.
    TestResultsResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          $ref: '#/components/schemas/TestResults'
      type: object
      required:
      - data
      title: TestResultsResponse
      description: Test results response.
    TestSubmission:
      properties:
        session_id:
          type: integer
          title: Session Id
        answers:
          items:
            $ref: '#/components/schemas/TestAnswer'
          type: array
          title: Answers
      type: object
      required:
      - session_id
      - answers
      title: TestSubmission
      description: Test submission schema.
    Token:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
        expires_in:
          type: integer
          title: Expires In
      type: object
      required:
      - access_token
      - token_type
      - expires_in
      title: Token
      description: Token response schema.
    User:
      properties:
        name:
          type: string
          maxLength: 50
          minLength: 3
          title: Name
          description: Username
        id:
          type: integer
          title: Id
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        created_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Created At
      type: object
      required:
      - name
      - id
      title: User
      description: User response schema.
    UserCreate:
      properties:
        name:
          type: string
          maxLength: 50
          minLength: 3
          title: Name
          description: Username
        password:
          type: string
          maxLength: 128
          minLength: 8
          title: Password
          description: Password
        email:
          type: string
          title: Email
          description: Email address
      type: object
      required:
      - name
      - password
      - email
      title: UserCreate
      description: User creation schema.
    UserResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          $ref: '#/components/schemas/User'
      type: object
      required:
      - data
      title: UserResponse
      description: User response with data.
    UserStats:
      properties:
        total_sessions:
          type: integer
          title: Total Sessions
        learn_sessions:
          type: integer
          title: Learn Sessions
        test_sessions:
          type: integer
          title: Test Sessions
        average_score:
          anyOf:
          - type: number
          - type: 'null'
          title: Average Score
        best_score:
          anyOf:
          - type: integer
          - type: 'null'
          title: Best Score
        study_streak:
          type: integer
          title: Study Streak
          default: 0
        favorite_subjects:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Favorite Subjects
          default: []
        sessions_this_week:
          type: integer
          title: Sessions This Week
          default: 0
        sessions_this_month:
          type: integer
          title: Sessions This Month
          default: 0
        unique_quizzes:
          type: integer
          title: Unique Quizzes
          default: 0
      type: object
      required:
      - total_sessions
      - learn_sessions
      - test_sessions
      title: UserStats
      description: User statistics schema - must match UserService.get_user_statistics()
        return dict.
    UserStatsResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          $ref: '#/components/schemas/UserStats'
      type: object
      required:
      - data
      title: UserStatsResponse
      description: User statistics response.
    UserUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 1
          - type: 'null'
          title: Name
      type: object
      title: UserUpdate
      description: User update schema.
    UsersResponse:
      properties:
        success:
          type: boolean
          title: Success
          default: true
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
          title: Data
      type: object
      required:
      - data
      title: UsersResponse
      description: Multiple users response.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
